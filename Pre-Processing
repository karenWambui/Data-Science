{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":10093986,"sourceType":"datasetVersion","datasetId":6224616}],"dockerImageVersionId":30804,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"What is missing Value?\nValues or data that is not stored for some variables in the given dataset.\nHow is missing value represented in the dataset?\nUsing NaN","metadata":{}},{"cell_type":"markdown","source":"Why do we need to care about handling missing values?\n* Many Ml algorithims fail if dataset contains missing values.However, K-Nearest and Naive Bayes support data with missing values\n* Biased machine learning model built will lead to incorrect results\n* It can lead to a lack of precision in the statistical analysis","metadata":{}},{"cell_type":"markdown","source":"**Dealing with missing values**\n1.Replace with mean for the numerical columns\n2.Replace with mode for the categorical data\n","metadata":{}},{"cell_type":"markdown","source":"**Imputing Missing Values For Categorical Feature**\n* Impute the most frequent value.","metadata":{}},{"cell_type":"code","source":"import pandas as pd\ndf =pd.read_csv('/kaggle/input/placement')\ndf.head()","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"import pandas as pd\ndf =pd.read_csv('/kaggle/input/placement/Placement_Data_Full_Class.csv')\ndf.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-04T03:00:40.510748Z","iopub.execute_input":"2024-12-04T03:00:40.511099Z","iopub.status.idle":"2024-12-04T03:00:40.549992Z","shell.execute_reply.started":"2024-12-04T03:00:40.511069Z","shell.execute_reply":"2024-12-04T03:00:40.548867Z"}},"outputs":[{"execution_count":3,"output_type":"execute_result","data":{"text/plain":"   sl_no gender  ssc_p    ssc_b  hsc_p    hsc_b     hsc_s  degree_p  \\\n0      1      M  67.00   Others  91.00   Others  Commerce     58.00   \n1      2      M  79.33  Central  78.33   Others   Science     77.48   \n2      3      M  65.00  Central  68.00  Central      Arts     64.00   \n3      4      M  56.00  Central  52.00  Central   Science     52.00   \n4      5      M  85.80  Central  73.60  Central  Commerce     73.30   \n\n    degree_t workex  etest_p specialisation  mba_p      status    salary  \n0   Sci&Tech     No     55.0         Mkt&HR  58.80      Placed  270000.0  \n1   Sci&Tech    Yes     86.5        Mkt&Fin  66.28      Placed  200000.0  \n2  Comm&Mgmt     No     75.0        Mkt&Fin  57.80      Placed  250000.0  \n3   Sci&Tech     No     66.0         Mkt&HR  59.43  Not Placed       NaN  \n4  Comm&Mgmt     No     96.8        Mkt&Fin  55.50      Placed  425000.0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sl_no</th>\n      <th>gender</th>\n      <th>ssc_p</th>\n      <th>ssc_b</th>\n      <th>hsc_p</th>\n      <th>hsc_b</th>\n      <th>hsc_s</th>\n      <th>degree_p</th>\n      <th>degree_t</th>\n      <th>workex</th>\n      <th>etest_p</th>\n      <th>specialisation</th>\n      <th>mba_p</th>\n      <th>status</th>\n      <th>salary</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>M</td>\n      <td>67.00</td>\n      <td>Others</td>\n      <td>91.00</td>\n      <td>Others</td>\n      <td>Commerce</td>\n      <td>58.00</td>\n      <td>Sci&amp;Tech</td>\n      <td>No</td>\n      <td>55.0</td>\n      <td>Mkt&amp;HR</td>\n      <td>58.80</td>\n      <td>Placed</td>\n      <td>270000.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>M</td>\n      <td>79.33</td>\n      <td>Central</td>\n      <td>78.33</td>\n      <td>Others</td>\n      <td>Science</td>\n      <td>77.48</td>\n      <td>Sci&amp;Tech</td>\n      <td>Yes</td>\n      <td>86.5</td>\n      <td>Mkt&amp;Fin</td>\n      <td>66.28</td>\n      <td>Placed</td>\n      <td>200000.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>M</td>\n      <td>65.00</td>\n      <td>Central</td>\n      <td>68.00</td>\n      <td>Central</td>\n      <td>Arts</td>\n      <td>64.00</td>\n      <td>Comm&amp;Mgmt</td>\n      <td>No</td>\n      <td>75.0</td>\n      <td>Mkt&amp;Fin</td>\n      <td>57.80</td>\n      <td>Placed</td>\n      <td>250000.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>M</td>\n      <td>56.00</td>\n      <td>Central</td>\n      <td>52.00</td>\n      <td>Central</td>\n      <td>Science</td>\n      <td>52.00</td>\n      <td>Sci&amp;Tech</td>\n      <td>No</td>\n      <td>66.0</td>\n      <td>Mkt&amp;HR</td>\n      <td>59.43</td>\n      <td>Not Placed</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>M</td>\n      <td>85.80</td>\n      <td>Central</td>\n      <td>73.60</td>\n      <td>Central</td>\n      <td>Commerce</td>\n      <td>73.30</td>\n      <td>Comm&amp;Mgmt</td>\n      <td>No</td>\n      <td>96.8</td>\n      <td>Mkt&amp;Fin</td>\n      <td>55.50</td>\n      <td>Placed</td>\n      <td>425000.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":3},{"cell_type":"code","source":"import pandas as pd\ndf =pd.read_csv('/kaggle/input/placement/Placement_Data_Full_Class.csv')\ndf.isnull().sum()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-04T03:04:01.241747Z","iopub.execute_input":"2024-12-04T03:04:01.242145Z","iopub.status.idle":"2024-12-04T03:04:01.264748Z","shell.execute_reply.started":"2024-12-04T03:04:01.242087Z","shell.execute_reply":"2024-12-04T03:04:01.263625Z"}},"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"sl_no              0\ngender             0\nssc_p              0\nssc_b              0\nhsc_p              0\nhsc_b              0\nhsc_s              0\ndegree_p           0\ndegree_t           0\nworkex             0\netest_p            0\nspecialisation     0\nmba_p              0\nstatus             0\nsalary            67\ndtype: int64"},"metadata":{}}],"execution_count":4},{"cell_type":"code","source":"import pandas as pd\ndf =pd.read_csv('/kaggle/input/placement/Placement_Data_Full_Class.csv')\ndf['salary'] = df['salary'].fillna(df['salary'].mode()[0])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-05T02:12:05.153518Z","iopub.execute_input":"2024-12-05T02:12:05.153874Z","iopub.status.idle":"2024-12-05T02:12:05.162896Z","shell.execute_reply.started":"2024-12-05T02:12:05.153843Z","shell.execute_reply":"2024-12-05T02:12:05.161850Z"}},"outputs":[],"execution_count":3},{"cell_type":"code","source":"import pandas as pd\ndf =pd.read_csv('/kaggle/input/placement/Placement_Data_Full_Class.csv')\n\n#df.head()\ndf['salary'] = df['salary'].fillna(df['salary'].mode()[0])\ndf.isnull().sum()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-05T02:14:29.118025Z","iopub.execute_input":"2024-12-05T02:14:29.118405Z","iopub.status.idle":"2024-12-05T02:14:29.134489Z","shell.execute_reply.started":"2024-12-05T02:14:29.118370Z","shell.execute_reply":"2024-12-05T02:14:29.133217Z"}},"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"sl_no             0\ngender            0\nssc_p             0\nssc_b             0\nhsc_p             0\nhsc_b             0\nhsc_s             0\ndegree_p          0\ndegree_t          0\nworkex            0\netest_p           0\nspecialisation    0\nmba_p             0\nstatus            0\nsalary            0\ndtype: int64"},"metadata":{}}],"execution_count":10},{"cell_type":"code","source":"import pandas as pd\ndf =pd.read_csv('/kaggle/input/placement/Placement_Data_Full_Class.csv')\n\n\ndf['salary'] = df['salary'].fillna(df['salary'].mode()[0])\ndf.isnull().sum()\ndf.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-05T02:16:06.089459Z","iopub.execute_input":"2024-12-05T02:16:06.090330Z","iopub.status.idle":"2024-12-05T02:16:06.114341Z","shell.execute_reply.started":"2024-12-05T02:16:06.090289Z","shell.execute_reply":"2024-12-05T02:16:06.113236Z"}},"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"   sl_no gender  ssc_p    ssc_b  hsc_p    hsc_b     hsc_s  degree_p  \\\n0      1      M  67.00   Others  91.00   Others  Commerce     58.00   \n1      2      M  79.33  Central  78.33   Others   Science     77.48   \n2      3      M  65.00  Central  68.00  Central      Arts     64.00   \n3      4      M  56.00  Central  52.00  Central   Science     52.00   \n4      5      M  85.80  Central  73.60  Central  Commerce     73.30   \n\n    degree_t workex  etest_p specialisation  mba_p      status    salary  \n0   Sci&Tech     No     55.0         Mkt&HR  58.80      Placed  270000.0  \n1   Sci&Tech    Yes     86.5        Mkt&Fin  66.28      Placed  200000.0  \n2  Comm&Mgmt     No     75.0        Mkt&Fin  57.80      Placed  250000.0  \n3   Sci&Tech     No     66.0         Mkt&HR  59.43  Not Placed  300000.0  \n4  Comm&Mgmt     No     96.8        Mkt&Fin  55.50      Placed  425000.0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sl_no</th>\n      <th>gender</th>\n      <th>ssc_p</th>\n      <th>ssc_b</th>\n      <th>hsc_p</th>\n      <th>hsc_b</th>\n      <th>hsc_s</th>\n      <th>degree_p</th>\n      <th>degree_t</th>\n      <th>workex</th>\n      <th>etest_p</th>\n      <th>specialisation</th>\n      <th>mba_p</th>\n      <th>status</th>\n      <th>salary</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>M</td>\n      <td>67.00</td>\n      <td>Others</td>\n      <td>91.00</td>\n      <td>Others</td>\n      <td>Commerce</td>\n      <td>58.00</td>\n      <td>Sci&amp;Tech</td>\n      <td>No</td>\n      <td>55.0</td>\n      <td>Mkt&amp;HR</td>\n      <td>58.80</td>\n      <td>Placed</td>\n      <td>270000.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>M</td>\n      <td>79.33</td>\n      <td>Central</td>\n      <td>78.33</td>\n      <td>Others</td>\n      <td>Science</td>\n      <td>77.48</td>\n      <td>Sci&amp;Tech</td>\n      <td>Yes</td>\n      <td>86.5</td>\n      <td>Mkt&amp;Fin</td>\n      <td>66.28</td>\n      <td>Placed</td>\n      <td>200000.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>M</td>\n      <td>65.00</td>\n      <td>Central</td>\n      <td>68.00</td>\n      <td>Central</td>\n      <td>Arts</td>\n      <td>64.00</td>\n      <td>Comm&amp;Mgmt</td>\n      <td>No</td>\n      <td>75.0</td>\n      <td>Mkt&amp;Fin</td>\n      <td>57.80</td>\n      <td>Placed</td>\n      <td>250000.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>M</td>\n      <td>56.00</td>\n      <td>Central</td>\n      <td>52.00</td>\n      <td>Central</td>\n      <td>Science</td>\n      <td>52.00</td>\n      <td>Sci&amp;Tech</td>\n      <td>No</td>\n      <td>66.0</td>\n      <td>Mkt&amp;HR</td>\n      <td>59.43</td>\n      <td>Not Placed</td>\n      <td>300000.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>M</td>\n      <td>85.80</td>\n      <td>Central</td>\n      <td>73.60</td>\n      <td>Central</td>\n      <td>Commerce</td>\n      <td>73.30</td>\n      <td>Comm&amp;Mgmt</td>\n      <td>No</td>\n      <td>96.8</td>\n      <td>Mkt&amp;Fin</td>\n      <td>55.50</td>\n      <td>Placed</td>\n      <td>425000.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":11},{"cell_type":"markdown","source":"\nSimpleImputer is a class in the sklearn.impute module of the Scikit-learn library,It is used to handle missing values in datasets by replcaing them with the specified values(e.g,mean,mode or median).This process is callled imputation.\n\n**Imputer object using the mean strategy and**\nMissing_values type for imputation","metadata":{}},{"cell_type":"code","source":"import numpy as np\nfrom sklearn.impute import SimpleImputer\nimputer = SimpleImputer(missing_values = np.nan,strategy=\"mean\")\ndata =[[12,np.nan,34],[10,32,np.nan],[np.nan,11,20]]\nprint(\"Original Data :\\n\",data)\n#fiiting the data to the imputer object\n\nimputer =  imputer.fit(data)\n\ndata =imputer.transform(data)\nprint(\"imputer Data : \\n\",data)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-05T02:32:28.540954Z","iopub.execute_input":"2024-12-05T02:32:28.541573Z","iopub.status.idle":"2024-12-05T02:32:28.552024Z","shell.execute_reply.started":"2024-12-05T02:32:28.541538Z","shell.execute_reply":"2024-12-05T02:32:28.550652Z"}},"outputs":[{"name":"stdout","text":"Original Data :\n [[12, nan, 34], [10, 32, nan], [nan, 11, 20]]\nimputer Data : \n [[12.  21.5 34. ]\n [10.  32.  27. ]\n [11.  11.  20. ]]\n","output_type":"stream"}],"execution_count":15},{"cell_type":"markdown","source":"","metadata":{}}]}